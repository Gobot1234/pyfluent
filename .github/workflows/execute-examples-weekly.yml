name: Execute Examples Weekly

on:
  schedule: # UTC at 0400 on Saturday
    - cron: "0 4 * * SAT"
  workflow_dispatch:

env:
  ANSYSLMD_LICENSE_FILE: ${{ format('1055@{0}', secrets.LICENSE_SERVER) }}
  PYFLUENT_TIMEOUT_FORCE_EXIT: 30
  PYFLUENT_LAUNCH_CONTAINER: 1
  PYFLUENT_LOGGING: "DEBUG"
  PYFLUENT_WATCHDOG_DEBUG: "OFF"
  PYFLUENT_HIDE_LOG_SECRETS: 1
  PYTHON_VERSION: "3.12"
  PYFLUENT_SKIP_API_UPGRADE_ADVICE: 1
  PYFLUENT_CONTAINER_MOUNT_SOURCE: "/home/ansys/Downloads/ansys_fluent_core_examples"

jobs:
  execute_examples:
    name: Build
    runs-on: [public-ubuntu-latest-8-cores]
    strategy:
      fail-fast: false
      matrix:
        include:
          - image-tag: v25.2.0
            version: 252
          - image-tag: v26.1.0
            version: 261

    steps:
      - uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: Python-${{ runner.os }}-${{ env.PYTHON_VERSION }}-${{ hashFiles('pyproject.toml') }}
          restore-keys: |
            Python-${{ runner.os }}-${{ env.PYTHON_VERSION }}

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ansys-bot
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Pull Fluent docker image
        run: make docker-pull
        env:
          FLUENT_IMAGE_TAG: ${{ matrix.image-tag }}

      - name: Install Dependencies
        run: |
          sudo mkdir -p /home/ansys/Downloads/ansys_fluent_core_examples
          sudo chmod a+rwx /home/ansys/Downloads/ansys_fluent_core_examples
          sudo apt update
          sudo apt install libegl1 libxcb-cursor0 libx11-xcb1 libxcb1 libxcb-render0 libxcb-shape0 libxcb-xfixes0
          pip install ansys-fluent-core>=0.32.1
          pip install ansys-fluent-visualization>=0.20.0

      - name: Execute Examples
        run: |
          echo "Executing examples"
          sudo rm -rf /home/ansys/Downloads/ansys_fluent_core_examples/*
        env:
          FLUENT_IMAGE_TAG: ${{ matrix.image-tag }}

      - name: Execute ahmed_body_workflow.py
        run: |
          python examples/00-fluent/ahmed_body_workflow.py
        env:
          FLUENT_IMAGE_TAG: ${{ matrix.image-tag }}

      # qt.qpa.plugin: From 6.5.0, xcb-cursor0 or libxcb-cursor0 is needed to load the Qt xcb platform plugin.
      - name: Execute brake.py
        run: |
          python examples/00-fluent/brake.py
        env:
          FLUENT_IMAGE_TAG: ${{ matrix.image-tag }}

      # qt.qpa.plugin: From 6.5.0, xcb-cursor0 or libxcb-cursor0 is needed to load the Qt xcb platform plugin.
      - name: Execute conjugate_heat_transfer.py
        run: |
          python examples/00-fluent/conjugate_heat_transfer.py
        env:
          FLUENT_IMAGE_TAG: ${{ matrix.image-tag }}

      - name: Execute DOE_ML.py
        run: |
          python examples/00-fluent/DOE_ML.py
        env:
          FLUENT_IMAGE_TAG: ${{ matrix.image-tag }}

      - name: Execute exhaust_system_settings_api.py
        run: |
          python examples/00-fluent/exhaust_system_settings_api.py
        env:
          FLUENT_IMAGE_TAG: ${{ matrix.image-tag }}

      - name: Execute external_compressible_flow.py
        run: |
          python examples/00-fluent/external_compressible_flow.py
        env:
          FLUENT_IMAGE_TAG: ${{ matrix.image-tag }}

      - name: Execute frozen_rotor_workflow.py
        run: |
          python examples/00-fluent/frozen_rotor_workflow.py
        env:
          FLUENT_IMAGE_TAG: ${{ matrix.image-tag }}

      - name: Execute lunar_lander_thermal.py
        run: |
          python examples/00-fluent/lunar_lander_thermal.py
        env:
          FLUENT_IMAGE_TAG: ${{ matrix.image-tag }}

      - name: Execute mixing_elbow_settings_api.py
        run: |
          python examples/00-fluent/mixing_elbow_settings_api.py
        env:
          FLUENT_IMAGE_TAG: ${{ matrix.image-tag }}

      - name: Execute modeling_ablation.py
        run: |
          python examples/00-fluent/modeling_ablation.py
        env:
          FLUENT_IMAGE_TAG: ${{ matrix.image-tag }}

      - name: Execute modeling_cavitation.py
        run: |
          python examples/00-fluent/modeling_cavitation.py
        env:
          FLUENT_IMAGE_TAG: ${{ matrix.image-tag }}

      - name: Execute parametric_static_mixer_1.py
        run: |
          python examples/00-fluent/parametric_static_mixer_1.py
        env:
          FLUENT_IMAGE_TAG: ${{ matrix.image-tag }}

      - name: Execute radiation_headlamp.py
        run: |
          python examples/00-fluent/radiation_headlamp.py
        env:
          FLUENT_IMAGE_TAG: ${{ matrix.image-tag }}

      - name: Execute species_transport.py
        run: |
          python examples/00-fluent/species_transport.py
        env:
          FLUENT_IMAGE_TAG: ${{ matrix.image-tag }}

      - name: Execute tyler_sofrin_modes.py
        run: |
          python examples/00-fluent/tyler_sofrin_modes.py
        env:
          FLUENT_IMAGE_TAG: ${{ matrix.image-tag }}

      - name: Cleanup previous docker containers
        if: always()
        run: make cleanup-previous-docker-containers
