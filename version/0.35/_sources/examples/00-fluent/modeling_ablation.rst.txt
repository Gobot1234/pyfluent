
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "examples/00-fluent/modeling_ablation.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_examples_00-fluent_modeling_ablation.py>`
        to download the full example code.

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_examples_00-fluent_modeling_ablation.py:

.. _modeling_ablation:

Modeling Ablation
-------------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 30-59

Objective
=====================================================================================

Ablation is an effective treatment used to protect an atmospheric reentry vehicle from
the damaging effects of external high temperatures caused by shock wave and viscous
heating. The ablative material is chipped away due to surface reactions that remove a
significant amount of heat and keep the vehicle surface temperature below the melting
point. In this tutorial, Fluent ablation model is demonstrated for a reendtry vehicle
geometry simplified as a 3D wedge.

This tutorial demonstrates how to do the following:

* Define boundary conditions for a high-speed flow.
* Set up the ablation model to model effects of a moving boundary due to ablation.
* Initiate and solve the transient simulation using the density-based solver.

Problem Description:
====================

The geometry of the 3D wedge considered in this tutorial is shown in following figure.
The air flow passes around a nose of a re-entry vehicle operating under high speed
conditions. The inlet air has a temperature of 4500 K, a gauge pressure of 13500 Pa,
and a Mach number of 3. The domain is bounded above and below by symmetry planes
(displayed in yellow). As the ablative coating chips away, the surface of the wall
moves. The moving of the surface is modeled using dynamic meshes. The surface moving
rate is estimated by Vieille's empirical law:

where r is the surface moving rate, p is the absolute pressure, and A and n are model
parameters. In the considered case, A = 5 and n = 0.1.

.. GENERATED FROM PYTHON SOURCE LINES 62-65

.. math::

   r = A \cdot p^n

.. GENERATED FROM PYTHON SOURCE LINES 68-71

.. image:: ../../_static/ablation-problem-schematic.png
   :align: center
   :alt: Problem Schematic

.. GENERATED FROM PYTHON SOURCE LINES 75-77

Import required libraries/modules
==================================================================================

.. GENERATED FROM PYTHON SOURCE LINES 77-83

.. code-block:: Python

    import os

    import ansys.fluent.core as pyfluent
    from ansys.fluent.core import examples
    from ansys.fluent.visualization import Contour, GraphicsWindow


.. GENERATED FROM PYTHON SOURCE LINES 84-86

Download example file
==================================================================================

.. GENERATED FROM PYTHON SOURCE LINES 86-92

.. code-block:: Python

    import_filename = examples.download_file(
        "ablation.msh.h5",
        "pyfluent/examples/Ablation-tutorial",
        save_path=os.getcwd(),
    )


.. GENERATED FROM PYTHON SOURCE LINES 93-95

Fluent Solution Setup
==================================================================================

.. GENERATED FROM PYTHON SOURCE LINES 97-99

Launch Fluent session with solver mode and print Fluent version
==================================================================================

.. GENERATED FROM PYTHON SOURCE LINES 99-107

.. code-block:: Python


    solver_session = pyfluent.launch_fluent(
        dimension=3,
        precision="double",
        processor_count=4,
    )
    print(solver_session.get_fluent_version())


.. GENERATED FROM PYTHON SOURCE LINES 108-110

Import mesh
==================================================================================

.. GENERATED FROM PYTHON SOURCE LINES 110-113

.. code-block:: Python


    solver_session.file.read_case(file_name=import_filename)


.. GENERATED FROM PYTHON SOURCE LINES 114-116

Define models
==================================================================================

.. GENERATED FROM PYTHON SOURCE LINES 116-123

.. code-block:: Python


    solver_session.setup.general.solver.type = "density-based-implicit"
    solver_session.setup.general.solver.time = "unsteady-1st-order"
    solver_session.setup.general.operating_conditions.operating_pressure = 0.0
    solver_session.setup.models.energy = {"enabled": True}
    solver_session.setup.models.ablation = {"enabled": True}


.. GENERATED FROM PYTHON SOURCE LINES 124-126

Define material
=================================================================

.. GENERATED FROM PYTHON SOURCE LINES 126-133

.. code-block:: Python


    solver_session.setup.materials.fluid["air"] = {
        "density": {"option": "ideal-gas"},
        "molecular_weight": {"value": 28.966, "option": "constant"},
    }
    solver_session.setup.materials.fluid["air"] = {"density": {"option": "ideal-gas"}}


.. GENERATED FROM PYTHON SOURCE LINES 134-136

Define boundary conditions
==========================

.. GENERATED FROM PYTHON SOURCE LINES 136-160

.. code-block:: Python


    solver_session.setup.boundary_conditions.set_zone_type(
        zone_list=["inlet"], new_type="pressure-far-field"
    )
    solver_session.setup.boundary_conditions.pressure_far_field[
        "inlet"
    ].momentum.gauge_pressure = 13500
    solver_session.setup.boundary_conditions.pressure_far_field[
        "inlet"
    ].momentum.mach_number = 3
    solver_session.setup.boundary_conditions.pressure_far_field[
        "inlet"
    ].thermal.temperature = 4500
    solver_session.setup.boundary_conditions.pressure_far_field[
        "inlet"
    ].turbulence.turbulent_intensity = 0.001

    solver_session.setup.boundary_conditions.pressure_outlet[
        "outlet"
    ].momentum.gauge_pressure = 13500
    solver_session.setup.boundary_conditions.pressure_outlet[
        "outlet"
    ].momentum.prevent_reverse_flow = True


.. GENERATED FROM PYTHON SOURCE LINES 161-167

Ablation boundary condition (Vielles Model)
++++++++++++++++++++++++++++++++++++++++++++
Once you have specified the ablation boundary conditions for the wall,
Ansys Fluent automatically enables the Dynamic Mesh model with the Smoothing and
Remeshing options, #creates the wall-ablation dynamic mesh zone, and configure
appropriate dynamic mesh settings.

.. GENERATED FROM PYTHON SOURCE LINES 167-178

.. code-block:: Python


    solver_session.setup.boundary_conditions.wall[
        "wall_ablation"
    ].ablation.ablation_select_model = "Vielle's Model"
    solver_session.setup.boundary_conditions.wall[
        "wall_ablation"
    ].ablation.ablation_vielle_a = 5
    solver_session.setup.boundary_conditions.wall[
        "wall_ablation"
    ].ablation.ablation_vielle_n = 0.1


.. GENERATED FROM PYTHON SOURCE LINES 179-181

Define dynamic mesh controls
============================

.. GENERATED FROM PYTHON SOURCE LINES 181-277

.. code-block:: Python


    solver_session.settings.setup.dynamic_mesh = {"enabled": True}

    solver_session.settings.setup.dynamic_mesh.dynamic_zones = {
        "dynamic-zone-1": {
            "solver": {"stabilization": {"enabled": False}},
            "geometry": {"feature_detection": {"enabled": False}, "definition": "faceted"},
            "meshing": {
                "smoothing": {"enabled": False},
                "remeshing": {"parameters": {"global_settings": True}, "enabled": True},
            },
            "motion": {"exclude_motion_bc": True},
            "type": "deforming",
            "zone": "interior--flow",
            "name": "dynamic-zone-1",
        }
    }

    solver_session.settings.setup.dynamic_mesh.dynamic_zones = {
        "dynamic-zone-2": {
            "solver": {
                "stabilization": {
                    "parameters": {"scale": 0.1, "method": "coefficient-based"},
                    "enabled": True,
                }
            },
            "geometry": {"feature_detection": {"enabled": False}, "definition": "faceted"},
            "meshing": {"smoothing": {"enabled": True}, "remeshing": {"enabled": False}},
            "motion": {"exclude_motion_bc": True},
            "type": "deforming",
            "zone": "outlet",
            "name": "dynamic-zone-2",
        }
    }

    solver_session.settings.setup.dynamic_mesh.dynamic_zones = {
        "dynamic-zone-3": {
            "solver": {
                "stabilization": {
                    "parameters": {"scale": 0.1, "method": "coefficient-based"},
                    "enabled": True,
                }
            },
            "geometry": {
                "feature_detection": {"enabled": False},
                "plane_def": {"normal": [0, -1, 0], "point": [0.0, -0.04, 0.0]},
                "definition": "plane",
            },
            "meshing": {"smoothing": {"enabled": True}, "remeshing": {"enabled": False}},
            "motion": {"exclude_motion_bc": True},
            "type": "deforming",
            "zone": "symm1",
            "name": "dynamic-zone-3",
        }
    }

    solver_session.settings.setup.dynamic_mesh.dynamic_zones = {
        "dynamic-zone-4": {
            "solver": {
                "stabilization": {
                    "parameters": {"scale": 0.1, "method": "coefficient-based"},
                    "enabled": True,
                }
            },
            "geometry": {
                "feature_detection": {"enabled": False},
                "plane_def": {"normal": [0, 1, 0], "point": [0.0, 0.04, 0.0]},
                "definition": "plane",
            },
            "meshing": {"smoothing": {"enabled": True}, "remeshing": {"enabled": False}},
            "motion": {"exclude_motion_bc": True},
            "type": "deforming",
            "zone": "symm2",
            "name": "dynamic-zone-4",
        }
    }

    solver_session.settings.setup.dynamic_mesh.dynamic_zones = {
        "dynamic-zone-5": {
            "solver": {"stabilization": {"enabled": False}},
            "geometry": {"feature_detection": {"enabled": False}},
            "meshing": {
                "udf_deform": {"max_skew": 0.7, "enabled": True},
                "adjacent_zones": {"t0": {"height": 0.0, "type": "constant"}},
            },
            "motion": {
                "relative_motion": {"enabled": False},
                "exclude_motion_bc": False,
                "motion_def": "**ablation**",
            },
            "type": "user-defined",
            "zone": "wall_ablation",
            "name": "dynamic-zone-5",
        }
    }


.. GENERATED FROM PYTHON SOURCE LINES 278-280

Define solver settings
=======================

.. GENERATED FROM PYTHON SOURCE LINES 280-285

.. code-block:: Python


    solver_session.setup.general.solver.time = "unsteady-2nd-order"
    solver_session.solution.controls.limits = {"max_temperature": 25000}
    solver_session.solution.monitor.residual.equations["energy"].absolute_criteria = 1e-06


.. GENERATED FROM PYTHON SOURCE LINES 286-288

Create report definitions
==========================

.. GENERATED FROM PYTHON SOURCE LINES 288-349

.. code-block:: Python


    solver_session.settings.solution.report_definitions.drag.create(name="drag_force_x")
    solver_session.settings.solution.report_definitions.drag["drag_force_x"].zones = [
        "wall_ablation"
    ]
    solver_session.settings.solution.monitor.report_plots.create(name="drag_force_x")
    solver_session.settings.solution.monitor.report_plots["drag_force_x"].report_defs = (
        "drag_force_x"
    )
    solver_session.settings.solution.monitor.report_files.create(name="drag_force_x")
    solver_session.settings.solution.monitor.report_files["drag_force_x"] = {
        "file_name": "drag_force_x.out",
        "report_defs": ["drag_force_x"],
    }

    solver_session.settings.solution.report_definitions.surface.create(
        name="pressure_avg_abl_wall"
    )
    solver_session.settings.solution.report_definitions.surface[
        "pressure_avg_abl_wall"
    ].report_type = "surface-areaavg"
    solver_session.settings.solution.report_definitions.surface[
        "pressure_avg_abl_wall"
    ].field = "pressure"
    solver_session.settings.solution.report_definitions.surface[
        "pressure_avg_abl_wall"
    ].surface_names = ["wall_ablation"]
    solver_session.settings.solution.monitor.report_plots.create(
        name="pressure_avg_abl_wall"
    )
    solver_session.settings.solution.monitor.report_plots[
        "pressure_avg_abl_wall"
    ].report_defs = "pressure_avg_abl_wall"
    solver_session.settings.solution.monitor.report_files.create(
        name="pressure_avg_abl_wall"
    )
    solver_session.settings.solution.monitor.report_files["pressure_avg_abl_wall"] = {
        "report_defs": ["pressure_avg_abl_wall"],
        "file_name": "pressure_avg_abl_wall.out",
    }

    solver_session.settings.solution.report_definitions.surface.create(name="recede_point")
    solver_session.settings.solution.report_definitions.surface[
        "recede_point"
    ].report_type = "surface-vertexmax"
    solver_session.settings.solution.report_definitions.surface["recede_point"].field = (
        "z-coordinate"
    )
    solver_session.settings.solution.report_definitions.surface[
        "recede_point"
    ].surface_names = ["wall_ablation"]
    solver_session.settings.solution.monitor.report_plots.create(name="recede_point")
    solver_session.settings.solution.monitor.report_plots["recede_point"].report_defs = (
        "recede_point"
    )
    solver_session.settings.solution.monitor.report_files.create(name="recede_point")
    solver_session.settings.solution.monitor.report_files["recede_point"] = {
        "file_name": "recede_point.out",
        "report_defs": ["recede_point"],
    }


.. GENERATED FROM PYTHON SOURCE LINES 350-352

Initialize and Save case
========================

.. GENERATED FROM PYTHON SOURCE LINES 352-362

.. code-block:: Python


    solver_session.solution.initialization.compute_defaults(
        from_zone_type="pressure-far-field", from_zone_name="inlet", phase="mixture"
    )
    solver_session.solution.initialization.initialization_type = "standard"
    solver_session.solution.initialization.standard_initialize()
    solver_session.solution.run_calculation.transient_controls.time_step_size = 1e-06

    solver_session.file.write(file_type="case", file_name="ablation.cas.h5")


.. GENERATED FROM PYTHON SOURCE LINES 363-366

Run the calculation
===================
Note: It may take about half an hour to finish the calculation.

.. GENERATED FROM PYTHON SOURCE LINES 366-371

.. code-block:: Python


    solver_session.solution.run_calculation.dual_time_iterate(
        time_step_count=100, max_iter_per_step=20
    )


.. GENERATED FROM PYTHON SOURCE LINES 372-375

Save simulation data
====================
Write case and data files

.. GENERATED FROM PYTHON SOURCE LINES 375-377

.. code-block:: Python

    solver_session.file.write(file_type="case-data", file_name="ablation_Solved.cas.h5")


.. GENERATED FROM PYTHON SOURCE LINES 378-380

Post Processing
==================================================================================

.. GENERATED FROM PYTHON SOURCE LINES 382-384

Display plots
=============

.. GENERATED FROM PYTHON SOURCE LINES 386-389

.. image:: ../../_static/ablation-residual.png
   :align: center
   :alt: residual

.. GENERATED FROM PYTHON SOURCE LINES 391-392

Scaled residual plot

.. GENERATED FROM PYTHON SOURCE LINES 394-397

.. image:: ../../_static/ablation-drag_force_x.png
   :align: center
   :alt: Drag force in x direction

.. GENERATED FROM PYTHON SOURCE LINES 399-400

History of the drag force on the ablation wall

.. GENERATED FROM PYTHON SOURCE LINES 402-405

.. image:: ../../_static/ablation-avg_pressure.png
   :align: center
   :alt: Average pressure on the ablation wall

.. GENERATED FROM PYTHON SOURCE LINES 407-408

History of the averaged pressure on the ablation wall

.. GENERATED FROM PYTHON SOURCE LINES 410-413

.. image:: ../../_static/ablation-recede_point.png
   :align: center
   :alt: Recede point (albation)

.. GENERATED FROM PYTHON SOURCE LINES 415-416

Recede point (deformation due to ablation)

.. GENERATED FROM PYTHON SOURCE LINES 418-421

Display contour
================
Following contours are displayed in the Fluent GUI:

.. GENERATED FROM PYTHON SOURCE LINES 421-439

.. code-block:: Python


    solver_session.results.surfaces.plane_surface.create(name="mid_plane")
    solver_session.results.surfaces.plane_surface["mid_plane"].method = "zx-plane"

    solver_session.results.graphics.contour.create(name="contour_pressure")
    solver_session.results.graphics.contour["contour_pressure"] = {
        "field": "pressure",
        "surfaces_list": ["mid_plane"],
    }
    solver_session.results.graphics.contour.display(object_name="contour_pressure")

    solver_session.results.graphics.contour.create(name="contour_mach")
    solver_session.results.graphics.contour["contour_mach"] = {
        "field": "mach-number",
        "surfaces_list": ["mid_plane"],
    }
    solver_session.results.graphics.contour.display(object_name="contour_mach")


.. GENERATED FROM PYTHON SOURCE LINES 440-443

Post processing with PyVista (3D visualization)
===============================================
Following graphics is displayed in the a new window/notebook

.. GENERATED FROM PYTHON SOURCE LINES 443-450

.. code-block:: Python



    contour1 = Contour(solver=solver_session, field="pressure", surfaces=["mid_plane"])

    window = GraphicsWindow()
    window.add_graphics(contour1)
    window.show()

.. GENERATED FROM PYTHON SOURCE LINES 451-454

.. image:: ../../_static/ablation-pressure.png
   :align: center
   :alt: Static Pressure Contour

.. GENERATED FROM PYTHON SOURCE LINES 456-457

Static Pressure Contour

.. GENERATED FROM PYTHON SOURCE LINES 457-466

.. code-block:: Python


    contour1.field = "mach-number"
    contour1.range.option = "auto-range-off"
    contour1.range.auto_range_off.minimum = 0.5
    contour1.range.auto_range_off.maximum = 3.0
    window = GraphicsWindow()
    window.add_graphics(contour1)
    window.show()


.. GENERATED FROM PYTHON SOURCE LINES 467-470

.. image:: ../../_static/ablation-mach-number.png
   :align: center
   :alt: Mach Number Contour

.. GENERATED FROM PYTHON SOURCE LINES 472-473

Mach Number Contour

.. GENERATED FROM PYTHON SOURCE LINES 475-477

Close the session
==================================================================================

.. GENERATED FROM PYTHON SOURCE LINES 477-480

.. code-block:: Python


    solver_session.exit()



.. _sphx_glr_download_examples_00-fluent_modeling_ablation.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: modeling_ablation.ipynb <modeling_ablation.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: modeling_ablation.py <modeling_ablation.py>`

    .. container:: sphx-glr-download sphx-glr-download-zip

      :download:`Download zipped: modeling_ablation.zip <modeling_ablation.zip>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
